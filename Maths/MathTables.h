/*-------Mathematical Tables-------
*	Defines math specific tables to give a slightly speed boost
*
*
*	Moon Wiz Studios (c) - 19/11/2019
*	by: Ramon Darwich de Menezes
*
*
*	YOU MAY NOT use this file for commercial purposes without permission from this file creator OR Moon Wiz Studios
*	YOU MAY use it in any project of your own or edit this file, given the proper credits to Moon Wiz Studios
*	This notice MAY NOT be removed nor altered from any source distribution
*
*	Version 0.5.0
*/

#ifndef _H_MATH_TABLES_
#define _H_MATH_TABLES_

namespace Tables
{
	//Normalization of 'n'. Returns 'n' / 255
	inline double Normalize255(unsigned char n)
	{
		switch(n)
		{
			case 0:
				return 0.0;
			case 1:
				return 0.00392157;
			case 2:
				return 0.00784314;
			case 3:
				return 0.01176471;
			case 4:
				return 0.01568627;
			case 5:
				return 0.01960784;
			case 6:
				return 0.02352941;
			case 7:
				return 0.02745098;
			case 8:
				return 0.03137255;
			case 9:
				return 0.03529412;
			case 10:
				return 0.03921569;
			case 11:
				return 0.04313725;
			case 12:
				return 0.04705882;
			case 13:
				return 0.05098039;
			case 14:
				return 0.05490196;
			case 15:
				return 0.05882353;
			case 16:
				return 0.06274510;
			case 17:
				return 0.06666667;
			case 18:
				return 0.07058824;
			case 19:
				return 0.07450980;
			case 20:
				return 0.07843137;
			case 21:
				return 0.08235294;
			case 22:
				return 0.08627451;
			case 23:
				return 0.09019608;
			case 24:
				return 0.09411765;
			case 25:
				return 0.09803922;
			case 26:
				return 0.10196078;
			case 27:
				return 0.10588235;
			case 28:
				return 0.10980392;
			case 29:
				return 0.11372549;
			case 30:
				return 0.11764706;
			case 31:
				return 0.12156863;
			case 32:
				return 0.12549020;
			case 33:
				return 0.12941176;
			case 34:
				return 0.13333333;
			case 35:
				return 0.13725490;
			case 36:
				return 0.14117647;
			case 37:
				return 0.14509804;
			case 38:
				return 0.14901961;
			case 39:
				return 0.15294118;
			case 40:
				return 0.15686275;
			case 41:
				return 0.16078431;
			case 42:
				return 0.16470588;
			case 43:
				return 0.16862745;
			case 44:
				return 0.17254902;
			case 45:
				return 0.17647059;
			case 46:
				return 0.18039216;
			case 47:
				return 0.18431373;
			case 48:
				return 0.18823529;
			case 49:
				return 0.19215686;
			case 50:
				return 0.19607843;
			case 51:
				return 0.20000000;
			case 52:
				return 0.20392157;
			case 53:
				return 0.20784314;
			case 54:
				return 0.21176471;
			case 55:
				return 0.21568627;
			case 56:
				return 0.21960784;
			case 57:
				return 0.22352941;
			case 58:
				return 0.22745098;
			case 59:
				return 0.23137255;
			case 60:
				return 0.23529412;
			case 61:
				return 0.23921569;
			case 62:
				return 0.24313725;
			case 63:
				return 0.24705882;
			case 64:
				return 0.25098039;
			case 65:
				return 0.25490196;
			case 66:
				return 0.25882353;
			case 67:
				return 0.26274510;
			case 68:
				return 0.26666667;
			case 69:
				return 0.27058824;
			case 70:
				return 0.27450980;
			case 71:
				return 0.27843137;
			case 72:
				return 0.28235294;
			case 73:
				return 0.28627451;
			case 74:
				return 0.29019608;
			case 75:
				return 0.29411765;
			case 76:
				return 0.29803922;
			case 77:
				return 0.30196078;
			case 78:
				return 0.30588235;
			case 79:
				return 0.30980392;
			case 80:
				return 0.31372549;
			case 81:
				return 0.31764706;
			case 82:
				return 0.32156863;
			case 83:
				return 0.32549020;
			case 84:
				return 0.32941176;
			case 85:
				return 0.33333333;
			case 86:
				return 0.33725490;
			case 87:
				return 0.34117647;
			case 88:
				return 0.34509804;
			case 89:
				return 0.34901961;
			case 90:
				return 0.35294118;
			case 91:
				return 0.35686275;
			case 92:
				return 0.36078431;
			case 93:
				return 0.36470588;
			case 94:
				return 0.36862745;
			case 95:
				return 0.37254902;
			case 96:
				return 0.37647059;
			case 97:
				return 0.38039216;
			case 98:
				return 0.38431373;
			case 99:
				return 0.38823529;
			case 100:
				return 0.39215686;
			case 101:
				return 0.39607843;
			case 102:
				return 0.40000000;
			case 103:
				return 0.40392157;
			case 104:
				return 0.40784314;
			case 105:
				return 0.41176471;
			case 106:
				return 0.41568627;
			case 107:
				return 0.41960784;
			case 108:
				return 0.42352941;
			case 109:
				return 0.42745098;
			case 110:
				return 0.43137255;
			case 111:
				return 0.43529412;
			case 112:
				return 0.43921569;
			case 113:
				return 0.44313725;
			case 114:
				return 0.44705882;
			case 115:
				return 0.45098039;
			case 116:
				return 0.45490196;
			case 117:
				return 0.45882353;
			case 118:
				return 0.46274510;
			case 119:
				return 0.46666667;
			case 120:
				return 0.47058824;
			case 121:
				return 0.47450980;
			case 122:
				return 0.47843137;
			case 123:
				return 0.48235294;
			case 124:
				return 0.48627451;
			case 125:
				return 0.49019608;
			case 126:
				return 0.49411765;
			case 127:
				return 0.49803922;
			case 128:
				return 0.50196078;
			case 129:
				return 0.50588235;
			case 130:
				return 0.50980392;
			case 131:
				return 0.51372549;
			case 132:
				return 0.51764706;
			case 133:
				return 0.52156863;
			case 134:
				return 0.52549020;
			case 135:
				return 0.52941176;
			case 136:
				return 0.53333333;
			case 137:
				return 0.53725490;
			case 138:
				return 0.54117647;
			case 139:
				return 0.54509804;
			case 140:
				return 0.54901961;
			case 141:
				return 0.55294118;
			case 142:
				return 0.55686275;
			case 143:
				return 0.56078431;
			case 144:
				return 0.56470588;
			case 145:
				return 0.56862745;
			case 146:
				return 0.57254902;
			case 147:
				return 0.57647059;
			case 148:
				return 0.58039216;
			case 149:
				return 0.58431373;
			case 150:
				return 0.58823529;
			case 151:
				return 0.59215686;
			case 152:
				return 0.59607843;
			case 153:
				return 0.60000000;
			case 154:
				return 0.60392157;
			case 155:
				return 0.60784314;
			case 156:
				return 0.61176471;
			case 157:
				return 0.61568627;
			case 158:
				return 0.61960784;
			case 159:
				return 0.62352941;
			case 160:
				return 0.62745098;
			case 161:
				return 0.63137255;
			case 162:
				return 0.63529412;
			case 163:
				return 0.63921569;
			case 164:
				return 0.64313725;
			case 165:
				return 0.64705882;
			case 166:
				return 0.65098039;
			case 167:
				return 0.65490196;
			case 168:
				return 0.65882353;
			case 169:
				return 0.66274510;
			case 170:
				return 0.66666667;
			case 171:
				return 0.67058824;
			case 172:
				return 0.67450980;
			case 173:
				return 0.67843137;
			case 174:
				return 0.68235294;
			case 175:
				return 0.68627451;
			case 176:
				return 0.69019608;
			case 177:
				return 0.69411765;
			case 178:
				return 0.69803922;
			case 179:
				return 0.70196078;
			case 180:
				return 0.70588235;
			case 181:
				return 0.70980392;
			case 182:
				return 0.71372549;
			case 183:
				return 0.71764706;
			case 184:
				return 0.72156863;
			case 185:
				return 0.72549020;
			case 186:
				return 0.72941176;
			case 187:
				return 0.73333333;
			case 188:
				return 0.73725490;
			case 189:
				return 0.74117647;
			case 190:
				return 0.74509804;
			case 191:
				return 0.74901961;
			case 192:
				return 0.75294118;
			case 193:
				return 0.75686275;
			case 194:
				return 0.76078431;
			case 195:
				return 0.76470588;
			case 196:
				return 0.76862745;
			case 197:
				return 0.77254902;
			case 198:
				return 0.77647059;
			case 199:
				return 0.78039216;
			case 200:
				return 0.78431373;
			case 201:
				return 0.78823529;
			case 202:
				return 0.79215686;
			case 203:
				return 0.79607843;
			case 204:
				return 0.80000000;
			case 205:
				return 0.80392157;
			case 206:
				return 0.80784314;
			case 207:
				return 0.81176471;
			case 208:
				return 0.81568627;
			case 209:
				return 0.81960784;
			case 210:
				return 0.82352941;
			case 211:
				return 0.82745098;
			case 212:
				return 0.83137255;
			case 213:
				return 0.83529412;
			case 214:
				return 0.83921569;
			case 215:
				return 0.84313725;
			case 216:
				return 0.84705882;
			case 217:
				return 0.85098039;
			case 218:
				return 0.85490196;
			case 219:
				return 0.85882353;
			case 220:
				return 0.86274510;
			case 221:
				return 0.86666667;
			case 222:
				return 0.87058824;
			case 223:
				return 0.87450980;
			case 224:
				return 0.87843137;
			case 225:
				return 0.88235294;
			case 226:
				return 0.88627451;
			case 227:
				return 0.89019608;
			case 228:
				return 0.89411765;
			case 229:
				return 0.89803922;
			case 230:
				return 0.90196078;
			case 231:
				return 0.90588235;
			case 232:
				return 0.90980392;
			case 233:
				return 0.91372549;
			case 234:
				return 0.91764706;
			case 235:
				return 0.92156863;
			case 236:
				return 0.92549020;
			case 237:
				return 0.92941176;
			case 238:
				return 0.93333333;
			case 239:
				return 0.93725490;
			case 240:
				return 0.94117647;
			case 241:
				return 0.94509804;
			case 242:
				return 0.94901961;
			case 243:
				return 0.95294118;
			case 244:
				return 0.95686275;
			case 245:
				return 0.96078431;
			case 246:
				return 0.96470588;
			case 247:
				return 0.96862745;
			case 248:
				return 0.97254902;
			case 249:
				return 0.97647059;
			case 250:
				return 0.98039216;
			case 251:
				return 0.98431373;
			case 252:
				return 0.98823529;
			case 253:
				return 0.99215686;
			case 254:
				return 0.99607843;
			case 255:
				return 1.0;
		}
	}
	
	//Fatorial table up to 20!. Anything other than [0..20] returns 1;
	inline uint64 Fatorial(int i)
	{
		switch (i)
		{
		default:
		case 0:
		case 1:
			return 1;
		case 2:
			return 2;
		case 3:
			return 6;
		case 4:
			return 24;
		case 5:
			return 120;
		case 6:
			return 720;
		case 7:
			return 5040;
		case 8:
			return 40320;
		case 9:
			return 362880;
		case 10:
			return 3628800;
		case 11:
			return 39916800;
		case 12:
			return 479001600;
		case 13:
			return 6227020800;
		case 14:
			return 87178291200;
		case 15:
			return 1307674368000;
		case 16:
			return 20922789888000;
		case 17:
			return 355687428096000;
		case 18:
			return 6402373705728000;
		case 19:
			return 121645100408832000;
		case 20:
			return 2432902008176640000;
		}
	}
}

#endif