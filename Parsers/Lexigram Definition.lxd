@
@ -------------------- Lexigram Definition --------------------
@ Definition of custom lexigrans 
@	-File format:
@ 		<keyword> <keyID> <'Comment'>
@ 	Where:
@	 <keyword>	 is a one string word, without spaces
@	 <keyID>	 is a integer defining the lexicon unique ID
@	 <'Comment'> is a 256 characters string, counting with the single brackets
@	The first character of the file defines a comment line. Those should be ignored by the parser
main 0 'Must check for () to verify as function'
@ - Conditional Operators [1..9] ------------------------------
if 1 'Conditional'
else 2 'Default conditional'
@ - Logic & Arithmetic Operators [10..99] ---------------------
= 10 'Atribution'
+ 11 'Sum'
- 12 'Subtraction'
* 13 'Multiply'
/ 14 'Division'
^ 15 'Power'
< 16 'Less than'
> 17 'Bigger than'
<= 18 'Less or Equal than'
>= 19 'Bigger or Equal than'
== 20 'Equal'
!= 21 'Different'
| 22 'Logic OR'
& 23 'Logic AND'
++ 24 'Increment Operator'
-- 25 'Decrement Operator'
@ - Special Operators [100..199] ------------------------------
{ 100 'Open Scope'
} 101 'Close Scope'
[ 102 'Index Open'
] 103 'Index Close'
( 104 'Priority Open'
) 105 'Priority Close'
; 106 'Line End'
// 198 'Comment Line'
# 199 'Include Call'
@ - Branch & Loop operators [200..299] ------------------------
for 200 'For Loop'
while 201 'While Loop and Do-While end'
do 202 'Do-While Loop starter'
switch 203 'Switch Labels Branch'
continue 204 'Skip-Continue Loop'
break 205 'Skip-Exit Loop'
@ - Reserved Words [400..999] ---------------------------------
char 400 'Atomic character'
string 401 'String class'
int 402 'Atomic integer'
double 403 'Atomic float'	
const 404 'Constant'
return 500 'Return operator'
@ - System Reserved [1000..9999] ------------------------------
__RES_VAR_SLOT__ 1000 'Start of the available variable slots'
__RES_CONS_NUM__ 9999 'Plain Number'
